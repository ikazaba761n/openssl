 openssl  help pkey
Usage: pkey [options]
Valid options are:
 -help             Display this summary
 -inform format    Input format (DER or PEM)
 -outform PEM|DER  Output format (DER or PEM)
 -passin val       Input file pass phrase source
 -passout val      Output file pass phrase source
 -in val           Input key
 -out outfile      Output file
 -pubin            Read public key from input (default is private key)
 -pubout           Output public key, not private
 -text_pub         Only output public key components
 -text             Output in plaintext as well
 -noout            Don't output the key
 -*                Any supported cipher
 -traditional      Use traditional format for private keys
 -engine val       Use engine, possibly a hardware device
 -check            Check key consistency
 -pubcheck         Check public key consistency


 ### コマンド入力時は　ハイフンは要らない
 ### 変更
 ### テストブランチを作成
 ### github.dev 使い方　リポジトリ上で　. コンマ　を入力
### vscode ,　カンマ

### mirar ブランチで編集　dev環境
### mirar 削除　dev環境で可能
### new ブランチ　メインウェブで作成　oct29

-named_curve val
使用する楕円曲線を指定します。注: これは単一の曲線であり、リストではありません。
可能なすべての曲線のリストについては、次を使用
 openssl ecparam -list_curves
  secp112r1 : SECG/WTLS curve over a 112 bit prime field
  secp112r2 : SECG curve over a 112 bit prime field
  secp128r1 : SECG curve over a 128 bit prime field
  secp128r2 : SECG curve over a 128 bit prime field
  secp160k1 : SECG curve over a 160 bit prime field
  secp160r1 : SECG curve over a 160 bit prime field
  secp160r2 : SECG/WTLS curve over a 160 bit prime field
  secp192k1 : SECG curve over a 192 bit prime field
  secp224k1 : SECG curve over a 224 bit prime field
  secp224r1 : NIST/SECG curve over a 224 bit prime field
  secp256k1 : SECG curve over a 256 bit prime field
  secp384r1 : NIST/SECG curve over a 384 bit prime field
  secp521r1 : NIST/SECG curve over a 521 bit prime field
  prime192v1: NIST/X9.62/SECG curve over a 192 bit prime field
  prime192v2: X9.62 curve over a 192 bit prime field
  prime192v3: X9.62 curve over a 192 bit prime field
  prime239v1: X9.62 curve over a 239 bit prime field
  prime239v2: X9.62 curve over a 239 bit prime field
  prime239v3: X9.62 curve over a 239 bit prime field
  prime256v1: X9.62/SECG curve over a 256 bit prime field
  sect113r1 : SECG curve over a 113 bit binary field
  sect113r2 : SECG curve over a 113 bit binary field
  sect131r1 : SECG/WTLS curve over a 131 bit binary field
  sect131r2 : SECG curve over a 131 bit binary field
  sect163k1 : NIST/SECG/WTLS curve over a 163 bit binary field
  sect163r1 : SECG curve over a 163 bit binary field
  sect163r2 : NIST/SECG curve over a 163 bit binary field
  sect193r1 : SECG curve over a 193 bit binary field
  sect193r2 : SECG curve over a 193 bit binary field
  sect233k1 : NIST/SECG/WTLS curve over a 233 bit binary field
  sect233r1 : NIST/SECG/WTLS curve over a 233 bit binary field
  sect239k1 : SECG curve over a 239 bit binary field
  sect283k1 : NIST/SECG curve over a 283 bit binary field
  sect283r1 : NIST/SECG curve over a 283 bit binary field
  sect409k1 : NIST/SECG curve over a 409 bit binary field
  sect409r1 : NIST/SECG curve over a 409 bit binary field
  sect571k1 : NIST/SECG curve over a 571 bit binary field
  sect571r1 : NIST/SECG curve over a 571 bit binary field
  c2pnb163v1: X9.62 curve over a 163 bit binary field
  c2pnb163v2: X9.62 curve over a 163 bit binary field
  c2pnb163v3: X9.62 curve over a 163 bit binary field
  c2pnb176v1: X9.62 curve over a 176 bit binary field
  c2tnb191v1: X9.62 curve over a 191 bit binary field
  c2tnb191v2: X9.62 curve over a 191 bit binary field
  c2tnb191v3: X9.62 curve over a 191 bit binary field
  c2pnb208w1: X9.62 curve over a 208 bit binary field
  c2tnb239v1: X9.62 curve over a 239 bit binary field
  c2tnb239v2: X9.62 curve over a 239 bit binary field
  c2tnb239v3: X9.62 curve over a 239 bit binary field
  c2pnb272w1: X9.62 curve over a 272 bit binary field
  c2pnb304w1: X9.62 curve over a 304 bit binary field
  c2tnb359v1: X9.62 curve over a 359 bit binary field
  c2pnb368w1: X9.62 curve over a 368 bit binary field
  c2tnb431r1: X9.62 curve over a 431 bit binary field
  wap-wsg-idm-ecid-wtls1: WTLS curve over a 113 bit binary field
  wap-wsg-idm-ecid-wtls3: NIST/SECG/WTLS curve over a 163 bit binary field
  wap-wsg-idm-ecid-wtls4: SECG curve over a 113 bit binary field
  wap-wsg-idm-ecid-wtls5: X9.62 curve over a 163 bit binary field
  wap-wsg-idm-ecid-wtls6: SECG/WTLS curve over a 112 bit prime field
  wap-wsg-idm-ecid-wtls7: SECG/WTLS curve over a 160 bit prime field
  wap-wsg-idm-ecid-wtls8: WTLS curve over a 112 bit prime field
  wap-wsg-idm-ecid-wtls9: WTLS curve over a 160 bit prime field
  wap-wsg-idm-ecid-wtls10: NIST/SECG/WTLS curve over a 233 bit binary field
  wap-wsg-idm-ecid-wtls11: NIST/SECG/WTLS curve over a 233 bit binary field
  wap-wsg-idm-ecid-wtls12: WTLS curve over a 224 bit prime field
  Oakley-EC2N-3:
        IPSec/IKE/Oakley curve #3 over a 155 bit binary field.
        Not suitable for ECDSA.
        Questionable extension field!
  Oakley-EC2N-4:
        IPSec/IKE/Oakley curve #4 over a 185 bit binary field.
        Not suitable for ECDSA.
        Questionable extension field!
  brainpoolP160r1: RFC 5639 curve over a 160 bit prime field
  brainpoolP160t1: RFC 5639 curve over a 160 bit prime field
  brainpoolP192r1: RFC 5639 curve over a 192 bit prime field
  brainpoolP192t1: RFC 5639 curve over a 192 bit prime field
  brainpoolP224r1: RFC 5639 curve over a 224 bit prime field
  brainpoolP224t1: RFC 5639 curve over a 224 bit prime field
  brainpoolP256r1: RFC 5639 curve over a 256 bit prime field
  brainpoolP256t1: RFC 5639 curve over a 256 bit prime field
  brainpoolP320r1: RFC 5639 curve over a 320 bit prime field
  brainpoolP320t1: RFC 5639 curve over a 320 bit prime field
  brainpoolP384r1: RFC 5639 curve over a 384 bit prime field
  brainpoolP384t1: RFC 5639 curve over a 384 bit prime field
  brainpoolP512r1: RFC 5639 curve over a 512 bit prime field
  brainpoolP512t1: RFC 5639 curve over a 512 bit prime field
  SM2       : SM2 curve over a 256 bit prime field



### prikey 自己SSL証明書 pem
/etc/ssl/private #sudoを使って　ls　cat　確認
SSL証明書      /etc/ssl/certs/ssl-cert-snakeoil.pem
SSL証明書private     /etc/ssl/private/ssl-cert-snakeoil.key

sudo vim /etc/apache2/conf-available/ssl-params.conf
  SSLEngine on
  SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
  SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key


####
$ cat githubcert.txt

2023年 12月  9日 土曜日 13:08:06 JST



サーバの管理者が発行した証明書署名要求(CSR)に対して、認証局(CA)がCAの秘密鍵で署名を 行ったものが証明書(CRT)

        ca openssl genpky  -algorithm ED25519 -out ca2.pem
        csr  openssl req -new -key ca2.pem -subj "/C=JP/" > ca2.csr
        crt openssl x509 -days 365 -req -signkey ca2.pem < ca2.csr > ca2.crt

        openssl x509 -text  -noout -in ca2.crt
Certificate:
    Data:
        Version: 1 (0x0)
        Serial Number:
            4f:cd:f8:a:c5:17:05:62:16:3c
        Signature Algorithm: ED25519
        Issuer: C = JP
        Validity
            Not Before: Dec  9 04:03:08 2023 GMT
            Not After : Dec  8 04:03:08 2024 GMT
        Subject: C = JP
        Subject Public Key Info:
            Public Key Algorithm: ED25519
                ED25519 Public-Key:
                pub:
                    7e:35:7d:93:c4:45:a5:d3:3e:4c:c7:8e:c1:73:e7:
                    63:58
    Signature Algorithm: ED25519
         dd:c7:7d:dd:b2:9e:ba:c4:ec:7a:34:77:5c:90:74:b4:db:c6:



20231210 12月10日　午後四時半

openssl x509 -req -days 3650 -signkey key.pem < request.csr > test.crt
< request.csr を　x509コマンドに入力　> test.crtで作成


20231212 12月１２日　午後一時
csr　要求ファイルは　　reqコマンドで　作成　確認
crl　証明書は　x５０９コマンドで確認　作成

-------混同すると　エラーで　困惑する　x５０９では　pri.keyを　-signkey 引数に使う

20231213 １２月１３日　水曜日　午後１２時半
openssl req コマンドで　秘密keyを同時に作る
     /dev/urandom   ランダム種コマンドを利用する
$ openssl req -newkey rsa:2048 -keyout encrypted_privkey.pem -rand /dev/urandom
　標準出力されるので　リダイレクト　＞　を使うか　画面表示のbginから始まる文字を
コピーして　使うこともできる　要求csr自体も内包されている
実行　Generating a RSA private key
-----BEGIN CERTIFICATE REQUEST-----
MIICkjCCAXoCAQAwTTELMAkGA1UEBhMCamExCzAJBgNVBAgMAmVlMQswCQYDVQQH
DAJxcTELMAkGA1UECgwCZGQxCzAJBgNVBAsMAmZmMQowCAYDVQQDDAFhMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr
-----END CERTIFICATE REQUEST-----

秘密キー　encrypted_privkey.pem　の　パスフレーズを外すコマンド
openssl rsa -in encrypted_privkey.pem -out decrypted_privatekey.pem
Enter pass phrase for encrypted_privkey.pem:パスフレーズを入力
openssl rsa -text -noout -in decrypted_privatekey.pem
RSA Private-Key: (2048 bit, 2 primes)
modulus:

encrypted_privkey.pem　を　catコマンドで見ると
cat decrypted_privatekey.pem
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEArVPBgdulfS89av9YYweG/33ALz4r1Esb1JQKDUkDfGAZTqPm
qG+6uJ0bImaMCnmCXUcf3nDUrnl3
gIfWE/qIqNvUBruQ0xeLOzq3sWA9b0=
-----END RSA PRIVATE KEY-----
プライム　素数や　モジュールは表示されない


#### ファイルからハッシュを作る　md5は使わない
openssl dgst -sha256 hash.txt
SHA256(hash.txt)= 99002a8cb2a4469a7804fd0b87b66714cb5dd5f8aee062dc04449d4d778436c3

openssl dgst -sha256 hash3.txt
SHA256(hash3.txt)= 2f023ba4520b5b36d8a0cc160a976297cbb5a11df5192898996efa77b9827e0e

署名をする
openssl dgst -sha256 -sign private-key.pem test.txt > signature.dat

電子署名を検証する
openssl dgst -sha256 -verify public-key.pem -signature signature.dat test.txt

楕円曲線（ elliptic curve）
#### openssl ecparam -name prime256v1 -genkey -noout -out key.pem
 cat key.pem
-----BEGIN EC PRIVATE KEY-----
MHcCAQEEII56reAAYQ2xDYAmNwsRQeXdSmWfJ4T43YSC1oANY4e3oAoGCCqGSM49
AwEHoUQDQgAEVEEGwYl/JMCQsMc
-----END EC PRIVATE KEY----

openssl pkey -text -in key.pem
-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgjnqt4ABhDbENgCY3
CxFB5d1KZZ8nhPjdhU/u
-----END PRIVATE KEY-----
Private-Key: (256 bit)
priv:
    8e:7a:ad:e0:
pub:
    04:54:41:06:c7:2c:5b:34:
    6867:7d:d0:ec:8c:9f:85:54:6a:21:c1:a3:00:
    5e:3c:f1:4f:ee
ASN1 OID: prime256v1
NIST CURVE: P-256

### keyout.pem public
openssl ec -in key.pem -des3 -out keyout.pem
read EC key
writing EC key
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:

 openssl ec -in keyout.pem -text -noout
read EC key
Enter PEM pass phrase:
Private-Key: (256 bit)
priv:
    8e:a:65:9f:27:84:f8:dd:84:82:d6:80:0d:63:
    87:b7
pub:
    04:54:41:06:c1:89:7f:24:c0:90:b0:c7:2c:5b:34:
    6ec:8c:9f:85:54:6a:21:c1:a3:00:
    5e:3c:f1:4f:ee
ASN1 OID: prime256v1
NIST CURVE: P-256

### diff
 diff key.pem  keyout.pem
2,4c2,7
< MHcCAQEEII56reAAYQ2xDYAmNwsRQeXdSmWfJ4T43YSC1oANY4e3oAoGCCqGSM49
< AwEHoUQufNma
< mBBdD83HVGd90OyMn4VUaiHBowBePPFP7g==
---
> Proc-Type: 4,ENCRYPTED
> DEK-Info: DES-EDE3-CBC,54F65B62166C3F9B
>
> 6WKD5qroWH/kk22VSRXv
> jiiiTUSyxK4L134Hm5DIvvBCmo


##### 証明書　SAN　代替えドメイン
[ v3_req ]
※以下を追加
subjectAltName = @alt_names

[ alt_names ]
DNS.1 = snekeoil.com
DNS.2 = snekeoiltwo.com

#### ターミナルでの　入力を待たないで　実行する　< /dev/null
標準入力を /dev/null 
openssl s_client -connect www.test.ee.qq:443 -servername www.test.ee.qq -showcerts < /dev/null
Certificate chain
 0 s:/C=


#### debian サーバ証明書　crtファイルを　調べる
ll /etc/ssl/certs | grep crt
ll　は　ls-l　のエイリアス
lrwxrwxrwx 1 root root   55  9月 18  2021  CA_Disig_Root_R2.pem -> /usr/share/ca-certificates/
ll /usr/share/ca-certificates/mozilla
合計 548K
-rw-r--r-- 1 root root 2.8K  1月 28  2021  derAIZ1.crt



####　openssl help ca
 -batch                  Don't ask questions

openssl ヘルプコマンドは　- バーを入れない


#### openssl -ca -selfsign               Sign a cert with the key associated with it
関連付けられたキーを使用して証明書に署名


#### policy match  設定の意味
# For the CA policy
[ policy_match ]
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

match csrリクエストとの値と一致しなくてはならない
optional なくてもよい 値があってもよい
supplied 無くてはならないが整合しなくてもよい

##### subjectAltName リストに、Foundational Services エンドポイントの外部ホスト名を含める






 
